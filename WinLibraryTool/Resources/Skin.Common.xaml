<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:sys="clr-namespace:System;assembly=mscorlib"
>

  <!-- ======== Dynamic Resource Bindings ======== -->

  <SolidColorBrush x:Key="App.Foreground" Color="{DynamicResource Color.Foreground}" />
  <SolidColorBrush x:Key="App.Background" Color="{DynamicResource Color.Background}" />
  <FontFamily      x:Key="App.FontFamily">Segoe UI</FontFamily>
  <sys:Double      x:Key="App.FontSize">13</sys:Double>

  <SolidColorBrush x:Key="Control.Background" Color="{DynamicResource Color.Control.Background}" />
  <SolidColorBrush x:Key="Control.Border" Color="{DynamicResource Color.Control.Border}" />
  <Thickness       x:Key="Control.BorderThickness">1</Thickness>
  <CornerRadius    x:Key="Control.CornerRadius">4</CornerRadius>
  <SolidColorBrush x:Key="Control.DisabledForeground" Color="{DynamicResource Color.Control.DisabledForeground}" />
  <sys:Double      x:Key="Control.MinHeight">32</sys:Double>
  <SolidColorBrush x:Key="Control.Hover" Color="{DynamicResource Color.Control.Hover}" />

  <SolidColorBrush x:Key="Button.Pressed" Color="{DynamicResource Color.Control.Pressed}" />

  <!-- ======== UI Controls Restyling ======== -->

  <!-- Button -->
  <Style TargetType="Button">
    <Setter Property="Foreground" Value="{DynamicResource App.Foreground}" />
    <Setter Property="Background" Value="{DynamicResource Control.Background}" />
    <Setter Property="BorderBrush" Value="{DynamicResource Control.Border}" />
    <Setter Property="BorderThickness" Value="{DynamicResource Control.BorderThickness}" />
    <Setter Property="Padding" Value="12,8" />
    <Setter Property="MinHeight" Value="{DynamicResource Control.MinHeight}" />
    <Setter Property="Margin" Value="2" />
    <Setter Property="FontFamily" Value="{DynamicResource App.FontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource App.FontSize}" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{DynamicResource Control.CornerRadius}"
          >
            <ContentPresenter
              Content="{TemplateBinding Content}"
              ContentTemplate="{TemplateBinding ContentTemplate}"
              ContentStringFormat="{TemplateBinding ContentStringFormat}"
              RecognizesAccessKey="True"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
            />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource Control.Hover}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource Button.Pressed}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value="0.5" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- ComboBox -->
  <Style TargetType="ComboBox">
    <Setter Property="Foreground" Value="{DynamicResource App.Foreground}" />
    <Setter Property="Background" Value="{DynamicResource Control.Background}" />
    <Setter Property="BorderBrush" Value="{DynamicResource Control.Border}" />
    <Setter Property="BorderThickness" Value="{DynamicResource Control.BorderThickness}" />
    <Setter Property="Padding" Value="6,4" />
    <Setter Property="MinHeight" Value="{DynamicResource Control.MinHeight}" />
    <Setter Property="FontFamily" Value="{DynamicResource App.FontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource App.FontSize}" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBox">
          <Grid>
            <Border
              x:Name="Border"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="{DynamicResource Control.CornerRadius}"
              SnapsToDevicePixels="True"
            />

            <ContentPresenter
              Margin="8,2,24,2"
              VerticalAlignment="Center"
              HorizontalAlignment="Left"
              Content="{TemplateBinding SelectionBoxItem}"
              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
              IsHitTestVisible="False"
            />

            <ToggleButton
              Name="ToggleButton"
              Grid.ColumnSpan="2"
              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
              Focusable="False"
              ClickMode="Press"
              Background="Transparent"
              BorderThickness="0"
              Cursor="Hand"
            >

              <ToggleButton.Style>
                <Style TargetType="ToggleButton">
                  <Setter Property="OverridesDefaultStyle" Value="True"/>
                  <Setter Property="Background" Value="Transparent"/>
                  <Setter Property="BorderBrush" Value="Transparent"/>
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="ToggleButton">
                        <!-- Use only the arrow inside -->
                        <Grid Background="Transparent">
                          <Path
                            VerticalAlignment="Center"
                            HorizontalAlignment="Right"
                            Margin="0,0,6,0"
                            Data="M 0 0 L 4 4 L 8 0 Z"
                            Fill="{DynamicResource App.Foreground}"
                          />
                        </Grid>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                  <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                      <Setter Property="Background" Value="{DynamicResource Control.Hover}" />
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </ToggleButton.Style>
            </ToggleButton>

            <Popup
              Name="Popup"
              Placement="Bottom"
              IsOpen="{TemplateBinding IsDropDownOpen}"
              AllowsTransparency="True"
              Focusable="False"
              PopupAnimation="Slide"
            >
              <Grid
                SnapsToDevicePixels="True"
                MinWidth="{TemplateBinding ActualWidth}"
                MaxHeight="200"
              >
                <Border
                  Background="{DynamicResource Control.Background}"      
                  BorderBrush="{DynamicResource Control.Border}"
                  BorderThickness="{DynamicResource Control.BorderThickness}"
                  CornerRadius="{DynamicResource Control.CornerRadius}"
                  SnapsToDevicePixels="True"
                />
                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                  <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                </ScrollViewer>
              </Grid>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Border" Property="Background" Value="{DynamicResource Control.Hover}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value="0.5" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="ComboBoxItem">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBoxItem">
          <Border
            x:Name="border"
            Padding="6,2"
            Background="Transparent"
            CornerRadius="{DynamicResource Control.CornerRadius}"
          >
            <ContentPresenter />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="border" Property="Background" Value="{DynamicResource Control.Hover}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter TargetName="border" Property="Background" Value="{DynamicResource SelectedBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Icon Button -->
  <Style x:Key="IconButton" TargetType="Button">
    <Setter Property="Width" Value="32"/>
    <Setter Property="Height" Value="28"/>
    <Setter Property="Margin" Value="2"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Cursor" Value="Hand"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            CornerRadius="{DynamicResource Control.CornerRadius}"
            SnapsToDevicePixels="True"
          >
            <ContentPresenter
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RecognizesAccessKey="True"
            />
          </Border>
          <ControlTemplate.Triggers>
            <!-- Hover -->
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="border" Property="Background" Value="{DynamicResource Control.Hover}"/>
            </Trigger>
            <!-- Pressed -->
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="border" Property="Background" Value="{DynamicResource Button.Pressed}"/>
              <Setter TargetName="border" Property="RenderTransformOrigin" Value="0.5,0.5"/>
              <Setter TargetName="border" Property="RenderTransform">
                <Setter.Value>
                  <ScaleTransform ScaleX="0.96" ScaleY="0.96"/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <!-- Disabled -->
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="border" Property="Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ListBox -->
  <Style TargetType="ListBox">
    <Setter Property="Foreground" Value="{DynamicResource App.Foreground}" />
    <Setter Property="Background" Value="{DynamicResource App.Background}" />
    <Setter Property="BorderBrush" Value="{DynamicResource Control.Border}" />
    <Setter Property="BorderThickness" Value="{DynamicResource Control.BorderThickness}" />
    <Setter Property="Padding" Value="8" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBox">
          <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{DynamicResource Control.CornerRadius}"
            SnapsToDevicePixels="True"
            Padding="{TemplateBinding Padding}"
          >
            <ScrollViewer
              Focusable="false"
              Padding="1"
            >
              <ItemsPresenter />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="ListBoxItem">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Padding" Value="6,4" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListBoxItem">
          <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            CornerRadius="{DynamicResource Control.CornerRadius}"
            Padding="{TemplateBinding Padding}"
            SnapsToDevicePixels="true"
          >
            <ContentPresenter
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
            />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="border" Property="Background" Value="{DynamicResource Control.Hover}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter TargetName="border" Property="Background" Value="{DynamicResource Button.Pressed}" />
              <Setter Property="Foreground" Value="{DynamicResource App.Foreground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{DynamicResource Control.DisabledForeground}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ListView -->
  <Style TargetType="ListView">
    <Setter Property="Foreground" Value="{DynamicResource App.Foreground}" />
    <Setter Property="Background" Value="{DynamicResource App.Background}" />
    <Setter Property="BorderBrush" Value="{DynamicResource Control.Border}" />
    <Setter Property="BorderThickness" Value="{DynamicResource Control.BorderThickness}" />
    <Setter Property="Padding" Value="8" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListView">
          <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{DynamicResource Control.CornerRadius}"
            SnapsToDevicePixels="True"
            Padding="{TemplateBinding Padding}"
          >
            <ScrollViewer
              Focusable="False"
              Padding="1"
            >
              <ItemsPresenter />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ListViewItem – matches your ListBoxItem styling -->
  <Style TargetType="ListViewItem">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Padding" Value="6,4" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListViewItem">
          <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            CornerRadius="{DynamicResource Control.CornerRadius}"
            Padding="{TemplateBinding Padding}"
            SnapsToDevicePixels="True"
          >
            <ContentPresenter
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
            />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter
                TargetName="border"
                Property="Background"
                Value="{DynamicResource Control.Hover}"
              />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter
                TargetName="border"
                Property="Background"
                Value="{DynamicResource Button.Pressed}"
              />
              <Setter
                Property="Foreground"
                Value="{DynamicResource App.Foreground}"
              />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter
                Property="Foreground"
                Value="{DynamicResource Control.DisabledForeground}"
              />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- TextBox -->
  <Style TargetType="TextBox">
    <Setter Property="Foreground" Value="{DynamicResource App.Foreground}" />
    <Setter Property="Background" Value="{DynamicResource Control.Background}" />
    <Setter Property="BorderBrush" Value="{DynamicResource Control.Border}" />
    <Setter Property="BorderThickness" Value="{DynamicResource Control.BorderThickness}" />
    <Setter Property="Padding" Value="6,4" />
    <Setter Property="FontFamily" Value="{DynamicResource App.FontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource App.FontSize}" />
    <Setter Property="MinHeight" Value="{DynamicResource Control.MinHeight}" />
    <Setter Property="Margin" Value="2" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{DynamicResource Control.CornerRadius}"
          >
            <ScrollViewer x:Name="PART_ContentHost" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- TextBlock -->
  <Style TargetType="TextBlock">
    <Setter Property="Foreground" Value="{DynamicResource App.Foreground}" />
    <Setter Property="FontFamily" Value="{DynamicResource App.FontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource App.FontSize}" />
    <Setter Property="VerticalAlignment" Value="Center" />
  </Style>

  <!-- Tooltip -->
  <Style TargetType="ToolTip">
    <Setter Property="Foreground" Value="{DynamicResource App.Foreground}" />
    <Setter Property="Background" Value="{DynamicResource App.Background}" />
    <Setter Property="BorderBrush" Value="{DynamicResource Control.Border}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="6" />
    <Setter Property="FontFamily" Value="{DynamicResource App.FontFamily}" />
    <Setter Property="FontSize" Value="{DynamicResource App.FontSize}" />
    <Setter Property="MaxWidth" Value="300"/>
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToolTip">
          <Border
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="{TemplateBinding BorderThickness}"
          Padding="{TemplateBinding Padding}"
          CornerRadius="4"
          SnapsToDevicePixels="True"
        >
            <Border.Effect>
              <DropShadowEffect Color="Black" BlurRadius="5" ShadowDepth="2" Opacity="0.3"/>
            </Border.Effect>
            <ContentPresenter>
              <ContentPresenter.Resources>
                <Style TargetType="TextBlock">
                  <Setter Property="Foreground" Value="{DynamicResource App.Foreground}"/>
                  <Setter Property="TextWrapping" Value="Wrap"/>
                </Style>
              </ContentPresenter.Resources>
            </ContentPresenter>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--
    Override the system Highlight brushes so TreeViewItem selection
    uses Control.Hover and App.Foreground colors
  -->
  <SolidColorBrush
    x:Key="{x:Static SystemColors.HighlightBrushKey}"
    Color="{DynamicResource Color.Control.Hover}"
  />
  <SolidColorBrush
    x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
    Color="{DynamicResource Color.Foreground}"
  />

  <!-- keep the selection visible when the TreeView loses focus -->
  <SolidColorBrush
    x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
    Color="{DynamicResource Color.Control.Hover}"
  />
  <SolidColorBrush
    x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
    Color="{DynamicResource Color.Foreground}"
  />

</ResourceDictionary>
